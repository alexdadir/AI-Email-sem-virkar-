{"ast":null,"code":"var _jsxFileName = \"/Users/alexdadi/Documents/email-platform/frontend/src/components/ComposeEmail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComposeEmail = () => {\n  _s();\n  const [to, setTo] = useState('');\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would typically send the email data to your backend\n    console.log({\n      to,\n      subject,\n      body\n    });\n    // For now, we'll just navigate back to the inbox\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"compose-email\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"To\",\n      value: to,\n      onChange: e => setTo(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Subject\",\n      value: subject,\n      onChange: e => setSubject(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Body\",\n      value: body,\n      onChange: e => setBody(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ComposeEmail, \"l3cP+8K8RnlmRKkMj7jxnNAsAXk=\", false, function () {\n  return [useNavigate];\n});\n_c = ComposeEmail;\nexport default ComposeEmail;\nvar _c;\n$RefreshReg$(_c, \"ComposeEmail\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ComposeEmail","_s","to","setTo","subject","setSubject","body","setBody","navigate","handleSubmit","e","preventDefault","console","log","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/alexdadi/Documents/email-platform/frontend/src/components/ComposeEmail.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst ComposeEmail: React.FC = () => {\n  const [to, setTo] = useState('');\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Here you would typically send the email data to your backend\n    console.log({ to, subject, body });\n    // For now, we'll just navigate back to the inbox\n    navigate('/');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"compose-email\">\n      <h2>New message</h2>\n      <input\n        type=\"email\"\n        placeholder=\"To\"\n        value={to}\n        onChange={(e) => setTo(e.target.value)}\n        required\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Subject\"\n        value={subject}\n        onChange={(e) => setSubject(e.target.value)}\n        required\n      />\n      <textarea\n        placeholder=\"Body\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        required\n      />\n      <button type=\"submit\">Send</button>\n    </form>\n  );\n};\n\nexport default ComposeEmail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC;MAAEX,EAAE;MAAEE,OAAO;MAAEE;IAAK,CAAC,CAAC;IAClC;IACAE,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACET,OAAA;IAAMe,QAAQ,EAAEL,YAAa;IAACM,SAAS,EAAC,eAAe;IAAAC,QAAA,gBACrDjB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrB,OAAA;MACEsB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,IAAI;MAChBC,KAAK,EAAErB,EAAG;MACVsB,QAAQ,EAAGd,CAAC,IAAKP,KAAK,CAACO,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;MACvCG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEnB,OAAQ;MACfoB,QAAQ,EAAGd,CAAC,IAAKL,UAAU,CAACK,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFrB,OAAA;MACEuB,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGd,CAAC,IAAKH,OAAO,CAACG,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX,CAAC;AAACnB,EAAA,CAxCID,YAAsB;EAAA,QAITH,WAAW;AAAA;AAAA8B,EAAA,GAJxB3B,YAAsB;AA0C5B,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
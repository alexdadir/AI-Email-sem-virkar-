{"ast":null,"code":"var _jsxFileName = \"/Users/alexdadi/Documents/email-platform/frontend/src/components/messageSidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageSidebar = ({\n  selectedEmailId\n}) => {\n  _s();\n  const [email, setEmail] = useState(null);\n  const [reply, setReply] = useState('');\n  useEffect(() => {\n    const fetchEmail = async () => {\n      if (selectedEmailId) {\n        const response = await axios.get(`http://localhost:3000/emails/${selectedEmailId}`);\n        setEmail(response.data);\n      }\n    };\n    fetchEmail();\n  }, [selectedEmailId]);\n  const handleReply = async () => {\n    if (email) {\n      await axios.post(`http://localhost:3000/emails/${email.id}/reply`, {\n        from: 'user@example.com',\n        // This should be the logged-in user's email\n        body: reply\n      });\n      setReply('');\n      // Refresh the email thread\n      const response = await axios.get(`http://localhost:3000/emails/${selectedEmailId}`);\n      setEmail(response.data);\n    }\n  };\n  if (!email) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-sidebar\",\n      children: \"Select an email to view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: email.from\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date(email.timestamp).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-bubble\",\n        children: email.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reply-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        placeholder: \"Type your reply...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReply,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSidebar, \"vEpzrC3Gdl/GXuUE81dXoynw5Pk=\");\n_c = MessageSidebar;\nexport default MessageSidebar;\nvar _c;\n$RefreshReg$(_c, \"MessageSidebar\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MessageSidebar","selectedEmailId","_s","email","setEmail","reply","setReply","fetchEmail","response","get","data","handleReply","post","id","from","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","timestamp","toLocaleString","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/alexdadi/Documents/email-platform/frontend/src/components/messageSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface Email {\n  id: string;\n  from: string;\n  body: string;\n  timestamp: string;\n}\n\ninterface MessageSidebarProps {\n  selectedEmailId: string | null;\n}\n\nconst MessageSidebar: React.FC<MessageSidebarProps> = ({ selectedEmailId }) => {\n  const [email, setEmail] = useState<Email | null>(null);\n  const [reply, setReply] = useState('');\n\n  useEffect(() => {\n    const fetchEmail = async () => {\n      if (selectedEmailId) {\n        const response = await axios.get(`http://localhost:3000/emails/${selectedEmailId}`);\n        setEmail(response.data);\n      }\n    };\n    fetchEmail();\n  }, [selectedEmailId]);\n\n  const handleReply = async () => {\n    if (email) {\n      await axios.post(`http://localhost:3000/emails/${email.id}/reply`, {\n        from: 'user@example.com', // This should be the logged-in user's email\n        body: reply\n      });\n      setReply('');\n      // Refresh the email thread\n      const response = await axios.get(`http://localhost:3000/emails/${selectedEmailId}`);\n      setEmail(response.data);\n    }\n  };\n\n  if (!email) {\n    return <div className=\"message-sidebar\">Select an email to view</div>;\n  }\n\n  return (\n    <div className=\"message-sidebar\">\n      <div className=\"email-header\">\n        <h3>{email.from}</h3>\n        <p>{new Date(email.timestamp).toLocaleString()}</p>\n      </div>\n      <div className=\"email-body\">\n        <div className=\"chat-bubble\">{email.body}</div>\n      </div>\n      <div className=\"reply-section\">\n        <textarea\n          value={reply}\n          onChange={(e) => setReply(e.target.value)}\n          placeholder=\"Type your reply...\"\n        />\n        <button onClick={handleReply}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}